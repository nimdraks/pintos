cd build && make check
make[1]: Entering directory `/home/nimdrak/pintos/src/threads/build'
pintos -v -k -T 60 --bochs  -- -q    run alarm-single < /dev/null 2> tests/threads/alarm-single.errors |tee tests/threads/alarm-single.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run alarm-single
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'alarm-single':
(alarm-single) begin
(alarm-single) Creating 5 threads to sleep 1 times each.
(alarm-single) Thread 0 sleeps 10 ticks each time,
(alarm-single) thread 1 sleeps 20 ticks each time, and so on.
(alarm-single) If successful, product of iteration count and
(alarm-single) sleep duration will appear in nondescending order.
(alarm-single) thread 0: duration=10, iteration=1, product=10
(alarm-single) thread 1: duration=20, iteration=1, product=20
(alarm-single) thread 2: duration=30, iteration=1, product=30
(alarm-single) thread 3: duration=40, iteration=1, product=40
(alarm-single) thread 4: duration=50, iteration=1, product=50
(alarm-single) end
Execution of 'alarm-single' complete.
Timer: 444 ticks
Thread: 250 idle ticks, 198 kernel ticks, 0 user ticks
Console: 984 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/alarm-single.ck tests/threads/alarm-single tests/threads/alarm-single.result
pass tests/threads/alarm-single
pintos -v -k -T 60 --bochs  -- -q    run alarm-multiple < /dev/null 2> tests/threads/alarm-multiple.errors |tee tests/threads/alarm-multiple.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run alarm-multiple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'alarm-multiple':
(alarm-multiple) begin
(alarm-multiple) Creating 5 threads to sleep 7 times each.
(alarm-multiple) Thread 0 sleeps 10 ticks each time,
(alarm-multiple) thread 1 sleeps 20 ticks each time, and so on.
(alarm-multiple) If successful, product of iteration count and
(alarm-multiple) sleep duration will appear in nondescending order.
(alarm-multiple) thread 0: duration=10, iteration=1, product=10
(alarm-multiple) thread 1: duration=20, iteration=1, product=20
(alarm-multiple) thread 0: duration=10, iteration=2, product=20
(alarm-multiple) thread 2: duration=30, iteration=1, product=30
(alarm-multiple) thread 0: duration=10, iteration=3, product=30
(alarm-multiple) thread 3: duration=40, iteration=1, product=40
(alarm-multiple) thread 1: duration=20, iteration=2, product=40
(alarm-multiple) thread 0: duration=10, iteration=4, product=40
(alarm-multiple) thread 4: duration=50, iteration=1, product=50
(alarm-multiple) thread 0: duration=10, iteration=5, product=50
(alarm-multiple) thread 2: duration=30, iteration=2, product=60
(alarm-multiple) thread 1: duration=20, iteration=3, product=60
(alarm-multiple) thread 0: duration=10, iteration=6, product=60
(alarm-multiple) thread 0: duration=10, iteration=7, product=70
(alarm-multiple) thread 3: duration=40, iteration=2, product=80
(alarm-multiple) thread 1: duration=20, iteration=4, product=80
(alarm-multiple) thread 2: duration=30, iteration=3, product=90
(alarm-multiple) thread 4: duration=50, iteration=2, product=100
(alarm-multiple) thread 1: duration=20, iteration=5, product=100
(alarm-multiple) thread 3: duration=40, iteration=3, product=120
(alarm-multiple) thread 2: duration=30, iteration=4, product=120
(alarm-multiple) thread 1: duration=20, iteration=6, product=120
(alarm-multiple) thread 1: duration=20, iteration=7, product=140
(alarm-multiple) thread 4: duration=50, iteration=3, product=150
(alarm-multiple) thread 2: duration=30, iteration=5, product=150
(alarm-multiple) thread 3: duration=40, iteration=4, product=160
(alarm-multiple) thread 2: duration=30, iteration=6, product=180
(alarm-multiple) thread 4: duration=50, iteration=4, product=200
(alarm-multiple) thread 3: duration=40, iteration=5, product=200
(alarm-multiple) thread 2: duration=30, iteration=7, product=210
(alarm-multiple) thread 3: duration=40, iteration=6, product=240
(alarm-multiple) thread 4: duration=50, iteration=5, product=250
(alarm-multiple) thread 3: duration=40, iteration=7, product=280
(alarm-multiple) thread 4: duration=50, iteration=6, product=300
(alarm-multiple) thread 4: duration=50, iteration=7, product=350
(alarm-multiple) end
Execution of 'alarm-multiple' complete.
Timer: 1067 ticks
Thread: 550 idle ticks, 521 kernel ticks, 0 user ticks
Console: 2953 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/alarm-multiple.ck tests/threads/alarm-multiple tests/threads/alarm-multiple.result
pass tests/threads/alarm-multiple
pintos -v -k -T 60 --bochs  -- -q    run alarm-simultaneous < /dev/null 2> tests/threads/alarm-simultaneous.errors |tee tests/threads/alarm-simultaneous.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run alarm-simultaneous
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'alarm-simultaneous':
(alarm-simultaneous) begin
(alarm-simultaneous) Creating 3 threads to sleep 5 times each.
(alarm-simultaneous) Each thread sleeps 10 ticks each time.
(alarm-simultaneous) Within an iteration, all threads should wake up on the same tick.
(alarm-simultaneous) iteration 0, thread 0: woke up after 10 ticks
(alarm-simultaneous) iteration 0, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 0, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 1, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 1, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 1, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 2, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 2, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 2, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 3, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 3, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 3, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 4, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 4, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 4, thread 2: woke up 0 ticks later
(alarm-simultaneous) end
Execution of 'alarm-simultaneous' complete.
Timer: 522 ticks
Thread: 247 idle ticks, 278 kernel ticks, 0 user ticks
Console: 1612 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/alarm-simultaneous.ck tests/threads/alarm-simultaneous tests/threads/alarm-simultaneous.result
pass tests/threads/alarm-simultaneous
pintos -v -k -T 60 --bochs  -- -q    run alarm-priority < /dev/null 2> tests/threads/alarm-priority.errors |tee tests/threads/alarm-priority.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run alarm-priority
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'alarm-priority':
(alarm-priority) begin
(alarm-priority) Thread priority 30 woke up.
(alarm-priority) Thread priority 29 woke up.
(alarm-priority) Thread priority 28 woke up.
(alarm-priority) Thread priority 27 woke up.
(alarm-priority) Thread priority 26 woke up.
(alarm-priority) Thread priority 25 woke up.
(alarm-priority) Thread priority 24 woke up.
(alarm-priority) Thread priority 23 woke up.
(alarm-priority) Thread priority 22 woke up.
(alarm-priority) Thread priority 21 woke up.
(alarm-priority) end
Execution of 'alarm-priority' complete.
Timer: 649 ticks
Thread: 434 idle ticks, 219 kernel ticks, 0 user ticks
Console: 837 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/alarm-priority.ck tests/threads/alarm-priority tests/threads/alarm-priority.result
pass tests/threads/alarm-priority
pintos -v -k -T 60 --bochs  -- -q    run alarm-zero < /dev/null 2> tests/threads/alarm-zero.errors |tee tests/threads/alarm-zero.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run alarm-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'alarm-zero':
(alarm-zero) begin
(alarm-zero) PASS
(alarm-zero) end
Execution of 'alarm-zero' complete.
Timer: 57 ticks
Thread: 0 idle ticks, 60 kernel ticks, 0 user ticks
Console: 381 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/alarm-zero.ck tests/threads/alarm-zero tests/threads/alarm-zero.result
pass tests/threads/alarm-zero
pintos -v -k -T 60 --bochs  -- -q    run alarm-negative < /dev/null 2> tests/threads/alarm-negative.errors |tee tests/threads/alarm-negative.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run alarm-negative
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'alarm-negative':
(alarm-negative) begin
(alarm-negative) PASS
(alarm-negative) end
Execution of 'alarm-negative' complete.
Timer: 60 ticks
Thread: 0 idle ticks, 64 kernel ticks, 0 user ticks
Console: 405 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/alarm-negative.ck tests/threads/alarm-negative tests/threads/alarm-negative.result
pass tests/threads/alarm-negative
pintos -v -k -T 60 --bochs  -- -q    run priority-change < /dev/null 2> tests/threads/priority-change.errors |tee tests/threads/priority-change.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-change
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-change':
(priority-change) begin
(priority-change) Creating a high-priority thread 2.
(priority-change) Thread 2 now lowering priority.
(priority-change) Thread 2 should have just lowered its priority.
(priority-change) Thread 2 exiting.
(priority-change) Thread 2 should have just exited.
(priority-change) end
Execution of 'priority-change' complete.
Timer: 105 ticks
Thread: 0 idle ticks, 109 kernel ticks, 0 user ticks
Console: 647 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-change.ck tests/threads/priority-change tests/threads/priority-change.result
pass tests/threads/priority-change
pintos -v -k -T 60 --bochs  -- -q    run priority-donate-one < /dev/null 2> tests/threads/priority-donate-one.errors |tee tests/threads/priority-donate-one.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-donate-one
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-one':
(priority-donate-one) begin
(priority-donate-one) This thread should have priority 32.  Actual priority: 32.
(priority-donate-one) This thread should have priority 33.  Actual priority: 33.
(priority-donate-one) acquire2: got the lock
(priority-donate-one) acquire2: done
(priority-donate-one) acquire1: got the lock
(priority-donate-one) acquire1: done
(priority-donate-one) acquire2, acquire1 must already have finished, in that order.
(priority-donate-one) This should be the last line before finishing this test.
(priority-donate-one) end
Execution of 'priority-donate-one' complete.
Timer: 152 ticks
Thread: 0 idle ticks, 156 kernel ticks, 0 user ticks
Console: 899 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-donate-one.ck tests/threads/priority-donate-one tests/threads/priority-donate-one.result
pass tests/threads/priority-donate-one
pintos -v -k -T 60 --bochs  -- -q    run priority-donate-multiple < /dev/null 2> tests/threads/priority-donate-multiple.errors |tee tests/threads/priority-donate-multiple.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-donate-multiple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-multiple':
(priority-donate-multiple) begin
(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
(priority-donate-multiple) Main thread should have priority 33.  Actual priority: 33.
(priority-donate-multiple) Thread b acquired lock b.
(priority-donate-multiple) Thread b finished.
(priority-donate-multiple) Thread b should have just finished.
(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
(priority-donate-multiple) Thread a acquired lock a.
(priority-donate-multiple) Thread a finished.
(priority-donate-multiple) Thread a should have just finished.
(priority-donate-multiple) Main thread should have priority 31.  Actual priority: 31.
(priority-donate-multiple) end
Execution of 'priority-donate-multiple' complete.
Timer: 185 ticks
Thread: 0 idle ticks, 188 kernel ticks, 0 user ticks
Console: 1103 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-donate-multiple.ck tests/threads/priority-donate-multiple tests/threads/priority-donate-multiple.result
pass tests/threads/priority-donate-multiple
pintos -v -k -T 60 --bochs  -- -q    run priority-donate-multiple2 < /dev/null 2> tests/threads/priority-donate-multiple2.errors |tee tests/threads/priority-donate-multiple2.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-donate-multiple2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-multiple2':
(priority-donate-multiple2) begin
(priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 34.
(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
(priority-donate-multiple2) Thread b acquired lock b.
(priority-donate-multiple2) Thread b finished.
(priority-donate-multiple2) Thread a acquired lock a.
(priority-donate-multiple2) Thread a finished.
(priority-donate-multiple2) Thread c finished.
(priority-donate-multiple2) Threads b, a, c should have just finished, in that order.
(priority-donate-multiple2) Main thread should have priority 31.  Actual priority: 31.
(priority-donate-multiple2) end
Execution of 'priority-donate-multiple2' complete.
Timer: 198 ticks
Thread: 0 idle ticks, 201 kernel ticks, 0 user ticks
Console: 1123 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-donate-multiple2.ck tests/threads/priority-donate-multiple2 tests/threads/priority-donate-multiple2.result
pass tests/threads/priority-donate-multiple2
pintos -v -k -T 60 --bochs  -- -q    run priority-donate-nest < /dev/null 2> tests/threads/priority-donate-nest.errors |tee tests/threads/priority-donate-nest.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-donate-nest
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-nest':
(priority-donate-nest) begin
(priority-donate-nest) Low thread should have priority 32.  Actual priority: 32.
(priority-donate-nest) Low thread should have priority 33.  Actual priority: 33.
(priority-donate-nest) Medium thread should have priority 33.  Actual priority: 33.
(priority-donate-nest) Medium thread got the lock.
(priority-donate-nest) High thread got the lock.
(priority-donate-nest) High thread finished.
(priority-donate-nest) High thread should have just finished.
(priority-donate-nest) Middle thread finished.
(priority-donate-nest) Medium thread should just have finished.
(priority-donate-nest) Low thread should have priority 31.  Actual priority: 31.
(priority-donate-nest) end
Execution of 'priority-donate-nest' complete.
Timer: 94 ticks
Thread: 0 idle ticks, 94 kernel ticks, 0 user ticks
Console: 1058 characters output
Keyboard: 0 keys pressed
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-donate-nest.ck tests/threads/priority-donate-nest tests/threads/priority-donate-nest.result
pass tests/threads/priority-donate-nest
pintos -v -k -T 60 --bochs  -- -q    run priority-donate-sema < /dev/null 2> tests/threads/priority-donate-sema.errors |tee tests/threads/priority-donate-sema.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-donate-sema
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-sema':
(priority-donate-sema) begin
(priority-donate-sema) Thread L acquired lock.
(priority-donate-sema) Thread L downed semaphore.
(priority-donate-sema) Thread H acquired lock.
(priority-donate-sema) Thread H finished.
(priority-donate-sema) Thread M finished.
(priority-donate-sema) Thread L finished.
(priority-donate-sema) Main thread finished.
(priority-donate-sema) end
Execution of 'priority-donate-sema' complete.
Timer: 132 ticks
Thread: 0 idle ticks, 137 kernel ticks, 0 user ticks
Console: 730 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-donate-sema.ck tests/threads/priority-donate-sema tests/threads/priority-donate-sema.result
pass tests/threads/priority-donate-sema
pintos -v -k -T 60 --bochs  -- -q    run priority-donate-lower < /dev/null 2> tests/threads/priority-donate-lower.errors |tee tests/threads/priority-donate-lower.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-donate-lower
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-lower':
(priority-donate-lower) begin
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
(priority-donate-lower) Lowering base priority...
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
(priority-donate-lower) acquire: got the lock
(priority-donate-lower) acquire: done
(priority-donate-lower) acquire must already have finished.
(priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
(priority-donate-lower) end
Execution of 'priority-donate-lower' complete.
Timer: 93 ticks
Thread: 0 idle ticks, 93 kernel ticks, 0 user ticks
Console: 861 characters output
Keyboard: 0 keys pressed
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-donate-lower.ck tests/threads/priority-donate-lower tests/threads/priority-donate-lower.result
pass tests/threads/priority-donate-lower
pintos -v -k -T 60 --bochs  -- -q    run priority-fifo < /dev/null 2> tests/threads/priority-fifo.errors |tee tests/threads/priority-fifo.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-fifo
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-fifo':
(priority-fifo) begin
(priority-fifo) 16 threads will iterate 16 times in the same order each time.
(priority-fifo) If the order varies then there is a bug.
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(priority-fifo) end
Execution of 'priority-fifo' complete.
Timer: 150 ticks
Thread: 0 idle ticks, 150 kernel ticks, 0 user ticks
Console: 1555 characters output
Keyboard: 0 keys pressed
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-fifo.ck tests/threads/priority-fifo tests/threads/priority-fifo.result
pass tests/threads/priority-fifo
pintos -v -k -T 60 --bochs  -- -q    run priority-preempt < /dev/null 2> tests/threads/priority-preempt.errors |tee tests/threads/priority-preempt.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-preempt
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-preempt':
(priority-preempt) begin
(priority-preempt) Thread high-priority iteration 0
(priority-preempt) Thread high-priority iteration 1
(priority-preempt) Thread high-priority iteration 2
(priority-preempt) Thread high-priority iteration 3
(priority-preempt) Thread high-priority iteration 4
(priority-preempt) Thread high-priority done!
(priority-preempt) The high-priority thread should have already completed.
(priority-preempt) end
Execution of 'priority-preempt' complete.
Timer: 88 ticks
Thread: 0 idle ticks, 91 kernel ticks, 0 user ticks
Console: 774 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-preempt.ck tests/threads/priority-preempt tests/threads/priority-preempt.result
pass tests/threads/priority-preempt
pintos -v -k -T 60 --bochs  -- -q    run priority-sema < /dev/null 2> tests/threads/priority-sema.errors |tee tests/threads/priority-sema.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-sema
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-sema':
(priority-sema) begin
(priority-sema) Thread priority 30 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 29 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 28 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 27 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 26 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 25 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 24 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 23 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 22 woke up.
(priority-sema) Back in main thread.
(priority-sema) Thread priority 21 woke up.
(priority-sema) Back in main thread.
(priority-sema) end
Execution of 'priority-sema' complete.
Timer: 163 ticks
Thread: 0 idle ticks, 163 kernel ticks, 0 user ticks
Console: 1190 characters output
Keyboard: 0 keys pressed
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-sema.ck tests/threads/priority-sema tests/threads/priority-sema.result
pass tests/threads/priority-sema
pintos -v -k -T 60 --bochs  -- -q    run priority-condvar < /dev/null 2> tests/threads/priority-condvar.errors |tee tests/threads/priority-condvar.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-condvar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-condvar':
(priority-condvar) begin
(priority-condvar) Thread priority 23 starting.
(priority-condvar) Thread priority 22 starting.
(priority-condvar) Thread priority 21 starting.
(priority-condvar) Thread priority 30 starting.
(priority-condvar) Thread priority 29 starting.
(priority-condvar) Thread priority 28 starting.
(priority-condvar) Thread priority 27 starting.
(priority-condvar) Thread priority 26 starting.
(priority-condvar) Thread priority 25 starting.
(priority-condvar) Thread priority 24 starting.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 30 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 29 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 28 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 27 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 26 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 25 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 24 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 23 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 22 woke up.
(priority-condvar) Signaling...
(priority-condvar) Thread priority 21 woke up.
(priority-condvar) end
Execution of 'priority-condvar' complete.
Timer: 254 ticks
Thread: 0 idle ticks, 254 kernel ticks, 0 user ticks
Console: 1665 characters output
Keyboard: 0 keys pressed
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-condvar.ck tests/threads/priority-condvar tests/threads/priority-condvar.result
pass tests/threads/priority-condvar
pintos -v -k -T 60 --bochs  -- -q    run priority-donate-chain < /dev/null 2> tests/threads/priority-donate-chain.errors |tee tests/threads/priority-donate-chain.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q run priority-donate-chain
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 3.
(priority-donate-chain) main should have priority 6.  Actual priority: 6.
(priority-donate-chain) main should have priority 9.  Actual priority: 9.
(priority-donate-chain) main should have priority 12.  Actual priority: 12.
(priority-donate-chain) main should have priority 15.  Actual priority: 15.
(priority-donate-chain) main should have priority 18.  Actual priority: 18.
(priority-donate-chain) main should have priority 21.  Actual priority: 21.
(priority-donate-chain) thread 1 got lock
(priority-donate-chain) thread 1 should have priority 21. Actual priority: 21
(priority-donate-chain) thread 2 got lock
(priority-donate-chain) thread 2 should have priority 21. Actual priority: 21
(priority-donate-chain) thread 3 got lock
(priority-donate-chain) thread 3 should have priority 21. Actual priority: 21
(priority-donate-chain) thread 4 got lock
(priority-donate-chain) thread 4 should have priority 21. Actual priority: 21
(priority-donate-chain) thread 5 got lock
(priority-donate-chain) thread 5 should have priority 21. Actual priority: 21
(priority-donate-chain) thread 6 got lock
(priority-donate-chain) thread 6 should have priority 21. Actual priority: 21
(priority-donate-chain) thread 7 got lock
(priority-donate-chain) thread 7 should have priority 21. Actual priority: 21
(priority-donate-chain) thread 7 finishing with priority 21.
(priority-donate-chain) interloper 7 finished.
(priority-donate-chain) thread 6 finishing with priority 18.
(priority-donate-chain) interloper 6 finished.
(priority-donate-chain) thread 5 finishing with priority 15.
(priority-donate-chain) interloper 5 finished.
(priority-donate-chain) thread 4 finishing with priority 12.
(priority-donate-chain) interloper 4 finished.
(priority-donate-chain) thread 3 finishing with priority 9.
(priority-donate-chain) interloper 3 finished.
(priority-donate-chain) thread 2 finishing with priority 6.
(priority-donate-chain) interloper 2 finished.
(priority-donate-chain) thread 1 finishing with priority 3.
(priority-donate-chain) interloper 1 finished.
(priority-donate-chain) main finishing with priority 0.
(priority-donate-chain) end
Execution of 'priority-donate-chain' complete.
Timer: 342 ticks
Thread: 0 idle ticks, 342 kernel ticks, 0 user ticks
Console: 2634 characters output
Keyboard: 0 keys pressed
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/priority-donate-chain.ck tests/threads/priority-donate-chain tests/threads/priority-donate-chain.result
pass tests/threads/priority-donate-chain
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-load-1 < /dev/null 2> tests/threads/mlfqs-load-1.errors |tee tests/threads/mlfqs-load-1.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-load-1
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-load-1':
(mlfqs-load-1) begin
(mlfqs-load-1) spinning for up to 45 seconds, please wait...
(mlfqs-load-1) FAIL: load average stayed below 0.5 for more than 45 seconds
Kernel PANIC at ../../tests/threads/tests.c:93 in fail(): test failed
Call stack: 0xc002ac46 0xc002d243 0xc002f2c9 0xc002d158 0xc00207cd 0xc00208b9 0xc00203c6.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 4673 ticks
Thread: 0 idle ticks, 4673 kernel ticks, 0 user ticks
Console: 778 characters output
Keyboard: 0 keys pressed
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-load-1.ck tests/threads/mlfqs-load-1 tests/threads/mlfqs-load-1.result
FAIL tests/threads/mlfqs-load-1
Kernel panic in run: PANIC at ../../tests/threads/tests.c:93 in fail(): test failed
Call stack: 0xc002ac46 0xc002d243 0xc002f2c9 0xc002d158 0xc00207cd 0xc00208b9 0xc00203c6
Translation of call stack:
0xc002ac46: debug_panic (.../../lib/kernel/debug.c:38)
0xc002d243: pass (.../tests/threads/tests.c:99)
0xc002f2c9: test_mlfqs_load_1 (...threads/mlfqs-load-1.c:44)
0xc002d158: run_test (.../tests/threads/tests.c:57)
0xc00207cd: run_task (.../../../threads/init.c:294)
0xc00208b9: run_actions (.../../../threads/init.c:343)
0xc00203c6: main (.../../../threads/init.c:138)
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-load-60 < /dev/null 2> tests/threads/mlfqs-load-60.errors |tee tests/threads/mlfqs-load-60.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-load-60
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-load-60':
(mlfqs-load-60) begin
(mlfqs-load-60) Starting 60 niced load threads...
(mlfqs-load-60) Starting threads took 5 seconds.
(mlfqs-load-60) After 0 seconds, load average=0.08.
(mlfqs-load-60) After 2 seconds, load average=1.78.
(mlfqs-load-60) After 4 seconds, load average=3.42.
(mlfqs-load-60) After 6 seconds, load average=5.01.
(mlfqs-load-60) After 8 seconds, load average=6.54.
(mlfqs-load-60) After 10 seconds, load average=8.02.
(mlfqs-load-60) After 12 seconds, load average=9.46.
(mlfqs-load-60) After 14 seconds, load average=10.84.
(mlfqs-load-60) After 16 seconds, load average=12.18.
(mlfqs-load-60) After 18 seconds, load average=13.48.
(mlfqs-load-60) After 20 seconds, load average=14.73.
(mlfqs-load-60) After 22 seconds, load average=15.94.
(mlfqs-load-60) After 24 seconds, load average=17.11.
(mlfqs-load-60) After 26 seconds, load average=18.25.
(mlfqs-load-60) After 28 seconds, load average=19.34.
(mlfqs-load-60) After 30 seconds, load average=20.40.
(mlfqs-load-60) After 32 seconds, load average=21.42.
(mlfqs-load-60) After 34 seconds, load average=22.41.
(mlfqs-load-60) After 36 seconds, load average=23.37.
(mlfqs-load-60) After 38 seconds, load average=24.29.
(mlfqs-load-60) After 40 seconds, load average=25.19.
(mlfqs-load-60) After 42 seconds, load average=26.05.
(mlfqs-load-60) After 44 seconds, load average=26.89.
(mlfqs-load-60) After 46 seconds, load average=27.69.
(mlfqs-load-60) After 48 seconds, load average=28.47.
(mlfqs-load-60) After 50 seconds, load average=29.23.
(mlfqs-load-60) After 52 seconds, load average=29.96.
(mlfqs-load-60) After 54 seconds, load average=30.67.
(mlfqs-load-60) After 56 seconds, load average=31.35.
(mlfqs-load-60) After 58 seconds, load average=32.01.
(mlfqs-load-60) After 60 seconds, load average=32.65.
(mlfqs-load-60) After 62 seconds, load average=31.56.
(mlfqs-load-60) After 64 seconds, load average=30.52.
(mlfqs-load-60) After 66 seconds, load average=29.50.
(mlfqs-load-60) After 68 seconds, load average=28.53.
(mlfqs-load-60) After 70 seconds, load average=27.58.
(mlfqs-load-60) After 72 seconds, load average=26.66.
(mlfqs-load-60) After 74 seconds, load average=25.78.
(mlfqs-load-60) After 76 seconds, load average=24.92.
(mlfqs-load-60) After 78 seconds, load average=24.10.
(mlfqs-load-60) After 80 seconds, load average=23.30.
(mlfqs-load-60) After 82 seconds, load average=22.52.
(mlfqs-load-60) After 84 seconds, load average=21.78.
(mlfqs-load-60) After 86 seconds, load average=21.06.
(mlfqs-load-60) After 88 seconds, load average=20.36.
(mlfqs-load-60) After 90 seconds, load average=19.68.
(mlfqs-load-60) After 92 seconds, load average=19.03.
(mlfqs-load-60) After 94 seconds, load average=18.40.
(mlfqs-load-60) After 96 seconds, load average=17.79.
(mlfqs-load-60) After 98 seconds, load average=17.20.
(mlfqs-load-60) After 100 seconds, load average=16.63.
(mlfqs-load-60) After 102 seconds, load average=16.07.
(mlfqs-load-60) After 104 seconds, load average=15.54.
(mlfqs-load-60) After 106 seconds, load average=15.02.
(mlfqs-load-60) After 108 seconds, load average=14.53.
(mlfqs-load-60) After 110 seconds, load average=14.04.
(mlfqs-load-60) After 112 seconds, load average=13.58.
(mlfqs-load-60) After 114 seconds, load average=13.13.
(mlfqs-load-60) After 116 seconds, load average=12.69.
(mlfqs-load-60) After 118 seconds, load average=12.27.
(mlfqs-load-60) After 120 seconds, load average=12.05.
(mlfqs-load-60) After 122 seconds, load average=11.85.
(mlfqs-load-60) After 124 seconds, load average=11.46.
(mlfqs-load-60) After 126 seconds, load average=11.08.
(mlfqs-load-60) After 128 seconds, load average=10.71.
(mlfqs-load-60) After 130 seconds, load average=10.35.
(mlfqs-load-60) After 132 seconds, load average=10.01.
(mlfqs-load-60) After 134 seconds, load average=9.68.
(mlfqs-load-60) After 136 seconds, load average=9.36.
(mlfqs-load-60) After 138 seconds, load average=9.05.
(mlfqs-load-60) After 140 seconds, load average=8.75.
(mlfqs-load-60) After 142 seconds, load average=8.45.
(mlfqs-load-60) After 144 seconds, load average=8.17.
(mlfqs-load-60) After 146 seconds, load average=7.90.
(mlfqs-load-60) After 148 seconds, load average=7.64.
(mlfqs-load-60) After 150 seconds, load average=7.39.
(mlfqs-load-60) After 152 seconds, load average=7.14.
(mlfqs-load-60) After 154 seconds, load average=6.90.
(mlfqs-load-60) After 156 seconds, load average=6.68.
(mlfqs-load-60) After 158 seconds, load average=6.45.
(mlfqs-load-60) After 160 seconds, load average=6.24.
(mlfqs-load-60) After 162 seconds, load average=6.03.
(mlfqs-load-60) After 164 seconds, load average=5.83.
(mlfqs-load-60) After 166 seconds, load average=5.64.
(mlfqs-load-60) After 168 seconds, load average=5.45.
(mlfqs-load-60) After 170 seconds, load average=5.27.
(mlfqs-load-60) After 172 seconds, load average=5.09.
(mlfqs-load-60) After 174 seconds, load average=4.93.
(mlfqs-load-60) After 176 seconds, load average=4.76.
(mlfqs-load-60) After 178 seconds, load average=4.60.
(mlfqs-load-60) end
Execution of 'mlfqs-load-60' complete.
Timer: 18871 ticks
Thread: 11129 idle ticks, 7746 kernel ticks, 0 user ticks
Console: 5358 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-load-60.ck tests/threads/mlfqs-load-60 tests/threads/mlfqs-load-60.result
FAIL tests/threads/mlfqs-load-60
Some load average values were missing or differed from those expected by more than 3.5.
  time   actual <-> expected explanation
------ -------- --- -------- ----------------------------------------
     2     1.78  =  2.95     
     4     3.42  =  4.84     
     6     5.01  =  6.66     
     8     6.54  =  8.42     
    10     8.02  =  10.13    
    12     9.46  =  11.78    
    14    10.84  =  13.37    
    16    12.18  =  14.91    
    18    13.48  =  16.40    
    20    14.73  =  17.84    
    22    15.94  =  19.24    
    24    17.11  =  20.58    
    26    18.25 <<< 21.89    Too small, by 0.14.
    28    19.34 <<< 23.15    Too small, by 0.31.
    30    20.40 <<< 24.37    Too small, by 0.47.
    32    21.42 <<< 25.54    Too small, by 0.62.
    34    22.41 <<< 26.68    Too small, by 0.77.
    36    23.37 <<< 27.78    Too small, by 0.91.
    38    24.29 <<< 28.85    Too small, by 1.06.
    40    25.19 <<< 29.88    Too small, by 1.19.
    42    26.05 <<< 30.87    Too small, by 1.32.
    44    26.89 <<< 31.84    Too small, by 1.45.
    46    27.69 <<< 32.77    Too small, by 1.58.
    48    28.47 <<< 33.67    Too small, by 1.70.
    50    29.23 <<< 34.54    Too small, by 1.81.
    52    29.96 <<< 35.38    Too small, by 1.92.
    54    30.67 <<< 36.19    Too small, by 2.02.
    56    31.35 <<< 36.98    Too small, by 2.13.
    58    32.01 <<< 37.74    Too small, by 2.23.
    60    32.65 <<< 37.48    Too small, by 1.33.
    62    31.56 <<< 36.24    Too small, by 1.18.
    64    30.52 <<< 35.04    Too small, by 1.02.
    66    29.50 <<< 33.88    Too small, by 0.88.
    68    28.53 <<< 32.76    Too small, by 0.73.
    70    27.58 <<< 31.68    Too small, by 0.60.
    72    26.66 <<< 30.63    Too small, by 0.47.
    74    25.78 <<< 29.62    Too small, by 0.34.
    76    24.92 <<< 28.64    Too small, by 0.22.
    78    24.10 <<< 27.69    Too small, by 0.09.
    80    23.30  =  26.78    
    82    22.52  =  25.89    
    84    21.78  =  25.04    
    86    21.06  =  24.21    
    88    20.36  =  23.41    
    90    19.68  =  22.64    
    92    19.03  =  21.89    
    94    18.40  =  21.16    
    96    17.79  =  20.46    
    98    17.20  =  19.79    
   100    16.63  =  19.13    
   102    16.07  =  18.50    
   104    15.54  =  17.89    
   106    15.02  =  17.30    
   108    14.53  =  16.73    
   110    14.04  =  16.17    
   112    13.58  =  15.64    
   114    13.13  =  15.12    
   116    12.69  =  14.62    
   118    12.27  =  14.14    
   120    12.05  =  13.67    
   122    11.85  =  13.22    
   124    11.46  =  12.78    
   126    11.08  =  12.36    
   128    10.71  =  11.95    
   130    10.35  =  11.56    
   132    10.01  =  11.17    
   134     9.68  =  10.80    
   136     9.36  =  10.45    
   138     9.05  =  10.10    
   140     8.75  =  9.77     
   142     8.45  =  9.45     
   144     8.17  =  9.13     
   146     7.90  =  8.83     
   148     7.64  =  8.54     
   150     7.39  =  8.26     
   152     7.14  =  7.98     
   154     6.90  =  7.72     
   156     6.68  =  7.47     
   158     6.45  =  7.22     
   160     6.24  =  6.98     
   162     6.03  =  6.75     
   164     5.83  =  6.53     
   166     5.64  =  6.31     
   168     5.45  =  6.10     
   170     5.27  =  5.90     
   172     5.09  =  5.70     
   174     4.93  =  5.52     
   176     4.76  =  5.33     
   178     4.60  =  5.16     
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-load-avg < /dev/null 2> tests/threads/mlfqs-load-avg.errors |tee tests/threads/mlfqs-load-avg.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-load-avg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-load-avg':
(mlfqs-load-avg) begin
(mlfqs-load-avg) Starting 60 load threads...
(mlfqs-load-avg) Starting threads took 5 seconds.
(mlfqs-load-avg) After 0 seconds, load average=0.07.
(mlfqs-load-avg) After 2 seconds, load average=0.19.
(mlfqs-load-avg) After 4 seconds, load average=0.34.
(mlfqs-load-avg) After 6 seconds, load average=0.54.
(mlfqs-load-avg) After 8 seconds, load average=0.80.
(mlfqs-load-avg) After 10 seconds, load average=1.09.
(mlfqs-load-avg) After 12 seconds, load average=1.44.
(mlfqs-load-avg) After 14 seconds, load average=1.83.
(mlfqs-load-avg) After 16 seconds, load average=2.27.
(mlfqs-load-avg) After 18 seconds, load average=2.74.
(mlfqs-load-avg) After 20 seconds, load average=3.26.
(mlfqs-load-avg) After 22 seconds, load average=3.82.
(mlfqs-load-avg) After 24 seconds, load average=4.73.
(mlfqs-load-avg) After 26 seconds, load average=5.05.
(mlfqs-load-avg) After 28 seconds, load average=5.72.
(mlfqs-load-avg) After 30 seconds, load average=6.42.
(mlfqs-load-avg) After 32 seconds, load average=7.15.
(mlfqs-load-avg) After 34 seconds, load average=7.92.
(mlfqs-load-avg) After 36 seconds, load average=8.72.
(mlfqs-load-avg) After 38 seconds, load average=9.55.
(mlfqs-load-avg) After 40 seconds, load average=10.41.
(mlfqs-load-avg) After 42 seconds, load average=11.30.
(mlfqs-load-avg) After 44 seconds, load average=12.68.
(mlfqs-load-avg) After 46 seconds, load average=13.63.
(mlfqs-load-avg) After 48 seconds, load average=14.12.
(mlfqs-load-avg) After 50 seconds, load average=15.11.
(mlfqs-load-avg) After 52 seconds, load average=16.64.
(mlfqs-load-avg) After 54 seconds, load average=17.16.
(mlfqs-load-avg) After 56 seconds, load average=18.76.
(mlfqs-load-avg) After 58 seconds, load average=19.30.
(mlfqs-load-avg) After 60 seconds, load average=20.92.
(mlfqs-load-avg) After 62 seconds, load average=21.43.
(mlfqs-load-avg) After 64 seconds, load average=22.83.
(mlfqs-load-avg) After 66 seconds, load average=23.28.
(mlfqs-load-avg) After 68 seconds, load average=24.44.
(mlfqs-load-avg) After 70 seconds, load average=25.13.
(mlfqs-load-avg) After 72 seconds, load average=25.75.
(mlfqs-load-avg) After 74 seconds, load average=26.34.
(mlfqs-load-avg) After 76 seconds, load average=26.88.
(mlfqs-load-avg) After 78 seconds, load average=27.58.
(mlfqs-load-avg) After 80 seconds, load average=27.73.
(mlfqs-load-avg) After 82 seconds, load average=27.94.
(mlfqs-load-avg) After 84 seconds, load average=28.13.
(mlfqs-load-avg) After 86 seconds, load average=28.37.
(mlfqs-load-avg) After 88 seconds, load average=28.41.
(mlfqs-load-avg) After 90 seconds, load average=28.40.
(mlfqs-load-avg) After 92 seconds, load average=28.30.
(mlfqs-load-avg) After 94 seconds, load average=28.13.
(mlfqs-load-avg) After 96 seconds, load average=27.85.
(mlfqs-load-avg) After 98 seconds, load average=27.61.
(mlfqs-load-avg) After 100 seconds, load average=27.14.
(mlfqs-load-avg) After 102 seconds, load average=26.59.
(mlfqs-load-avg) After 104 seconds, load average=26.19.
(mlfqs-load-avg) After 106 seconds, load average=25.92.
(mlfqs-load-avg) After 108 seconds, load average=25.92.
(mlfqs-load-avg) After 110 seconds, load average=25.92.
(mlfqs-load-avg) After 112 seconds, load average=25.92.
(mlfqs-load-avg) After 114 seconds, load average=25.62.
(mlfqs-load-avg) After 116 seconds, load average=24.97.
(mlfqs-load-avg) After 118 seconds, load average=24.22.
(mlfqs-load-avg) After 120 seconds, load average=23.43.
(mlfqs-load-avg) After 122 seconds, load average=22.65.
(mlfqs-load-avg) After 124 seconds, load average=21.90.
(mlfqs-load-avg) After 126 seconds, load average=21.18.
(mlfqs-load-avg) After 128 seconds, load average=20.47.
(mlfqs-load-avg) After 130 seconds, load average=19.79.
(mlfqs-load-avg) After 132 seconds, load average=19.14.
(mlfqs-load-avg) After 134 seconds, load average=18.50.
(mlfqs-load-avg) After 136 seconds, load average=17.89.
(mlfqs-load-avg) After 138 seconds, load average=17.30.
(mlfqs-load-avg) After 140 seconds, load average=16.72.
(mlfqs-load-avg) After 142 seconds, load average=16.17.
(mlfqs-load-avg) After 144 seconds, load average=15.63.
(mlfqs-load-avg) After 146 seconds, load average=15.11.
(mlfqs-load-avg) After 148 seconds, load average=14.61.
(mlfqs-load-avg) After 150 seconds, load average=14.13.
(mlfqs-load-avg) After 152 seconds, load average=13.66.
(mlfqs-load-avg) After 154 seconds, load average=13.20.
(mlfqs-load-avg) After 156 seconds, load average=12.77.
(mlfqs-load-avg) After 158 seconds, load average=12.34.
(mlfqs-load-avg) After 160 seconds, load average=11.93.
(mlfqs-load-avg) After 162 seconds, load average=11.54.
(mlfqs-load-avg) After 164 seconds, load average=11.15.
(mlfqs-load-avg) After 166 seconds, load average=10.78.
(mlfqs-load-avg) After 168 seconds, load average=10.43.
(mlfqs-load-avg) After 170 seconds, load average=10.08.
(mlfqs-load-avg) After 172 seconds, load average=9.74.
(mlfqs-load-avg) After 174 seconds, load average=9.42.
(mlfqs-load-avg) After 176 seconds, load average=9.11.
(mlfqs-load-avg) After 178 seconds, load average=8.81.
(mlfqs-load-avg) end
Execution of 'mlfqs-load-avg' complete.
Timer: 18873 ticks
Thread: 5998 idle ticks, 12879 kernel ticks, 0 user ticks
Console: 5455 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-load-avg.ck tests/threads/mlfqs-load-avg tests/threads/mlfqs-load-avg.result
FAIL tests/threads/mlfqs-load-avg
Some load average values were missing or differed from those expected by more than 2.5.
  time   actual <-> expected explanation
------ -------- --- -------- ----------------------------------------
     2     0.19  =  0.05     
     4     0.34  =  0.16     
     6     0.54  =  0.34     
     8     0.80  =  0.58     
    10     1.09  =  0.87     
    12     1.44  =  1.22     
    14     1.83  =  1.63     
    16     2.27  =  2.09     
    18     2.74  =  2.60     
    20     3.26  =  3.16     
    22     3.82  =  3.76     
    24     4.73  =  4.42     
    26     5.05  =  5.11     
    28     5.72  =  5.85     
    30     6.42  =  6.63     
    32     7.15  =  7.46     
    34     7.92  =  8.32     
    36     8.72  =  9.22     
    38     9.55  =  10.15    
    40    10.41  =  11.12    
    42    11.30  =  12.13    
    44    12.68  =  13.16    
    46    13.63  =  14.23    
    48    14.12  =  15.33    
    50    15.11  =  16.46    
    52    16.64  =  17.62    
    54    17.16  =  18.81    
    56    18.76  =  20.02    
    58    19.30  =  21.26    
    60    20.92  =  22.52    
    62    21.43  =  23.71    
    64    22.83  =  24.80    
    66    23.28  =  25.78    
    68    24.44  =  26.66    
    70    25.13  =  27.45    
    72    25.75  =  28.14    
    74    26.34  =  28.75    
    76    26.88  =  29.27    
    78    27.58  =  29.71    
    80    27.73  =  30.06    
    82    27.94  =  30.34    
    84    28.13  =  30.55    
    86    28.37  =  30.68    
    88    28.41  =  30.74    
    90    28.40  =  30.73    
    92    28.30  =  30.66    
    94    28.13  =  30.52    
    96    27.85  =  30.32    
    98    27.61  =  30.06    
   100    27.14 <<< 29.74    Too small, by 0.10.
   102    26.59 <<< 29.37    Too small, by 0.28.
   104    26.19 <<< 28.95    Too small, by 0.26.
   106    25.92 <<< 28.47    Too small, by 0.05.
   108    25.92  =  27.94    
   110    25.92  =  27.36    
   112    25.92  =  26.74    
   114    25.62  =  26.07    
   116    24.97  =  25.36    
   118    24.22  =  24.60    
   120    23.43  =  23.81    
   122    22.65  =  23.02    
   124    21.90  =  22.26    
   126    21.18  =  21.52    
   128    20.47  =  20.81    
   130    19.79  =  20.12    
   132    19.14  =  19.46    
   134    18.50  =  18.81    
   136    17.89  =  18.19    
   138    17.30  =  17.59    
   140    16.72  =  17.01    
   142    16.17  =  16.45    
   144    15.63  =  15.90    
   146    15.11  =  15.38    
   148    14.61  =  14.87    
   150    14.13  =  14.38    
   152    13.66  =  13.90    
   154    13.20  =  13.44    
   156    12.77  =  13.00    
   158    12.34  =  12.57    
   160    11.93  =  12.15    
   162    11.54  =  11.75    
   164    11.15  =  11.36    
   166    10.78  =  10.99    
   168    10.43  =  10.62    
   170    10.08  =  10.27    
   172     9.74  =  9.93     
   174     9.42  =  9.61     
   176     9.11  =  9.29     
   178     8.81  =  8.98     
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-recent-1 < /dev/null 2> tests/threads/mlfqs-recent-1.errors |tee tests/threads/mlfqs-recent-1.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-recent-1
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-recent-1':
(mlfqs-recent-1) begin
(mlfqs-recent-1) Sleeping 10 seconds to allow recent_cpu to decay, please wait...
(mlfqs-recent-1) After 2 seconds, recent_cpu is 6.50, load_avg is 0.02.
(mlfqs-recent-1) After 4 seconds, recent_cpu is 11.83, load_avg is 0.05.
(mlfqs-recent-1) After 6 seconds, recent_cpu is 16.99, load_avg is 0.08.
(mlfqs-recent-1) After 8 seconds, recent_cpu is 21.98, load_avg is 0.10.
(mlfqs-recent-1) After 10 seconds, recent_cpu is 26.82, load_avg is 0.13.
(mlfqs-recent-1) After 12 seconds, recent_cpu is 31.50, load_avg is 0.15.
(mlfqs-recent-1) After 14 seconds, recent_cpu is 36.04, load_avg is 0.17.
(mlfqs-recent-1) After 16 seconds, recent_cpu is 40.43, load_avg is 0.20.
(mlfqs-recent-1) After 18 seconds, recent_cpu is 44.67, load_avg is 0.22.
(mlfqs-recent-1) After 20 seconds, recent_cpu is 48.78, load_avg is 0.24.
(mlfqs-recent-1) After 22 seconds, recent_cpu is 52.77, load_avg is 0.26.
(mlfqs-recent-1) After 24 seconds, recent_cpu is 56.63, load_avg is 0.28.
(mlfqs-recent-1) After 26 seconds, recent_cpu is 60.36, load_avg is 0.30.
(mlfqs-recent-1) After 28 seconds, recent_cpu is 63.98, load_avg is 0.32.
(mlfqs-recent-1) After 30 seconds, recent_cpu is 67.48, load_avg is 0.33.
(mlfqs-recent-1) After 32 seconds, recent_cpu is 70.88, load_avg is 0.35.
(mlfqs-recent-1) After 34 seconds, recent_cpu is 74.16, load_avg is 0.37.
(mlfqs-recent-1) After 36 seconds, recent_cpu is 77.33, load_avg is 0.38.
(mlfqs-recent-1) After 38 seconds, recent_cpu is 80.40, load_avg is 0.40.
(mlfqs-recent-1) After 40 seconds, recent_cpu is 83.37, load_avg is 0.41.
(mlfqs-recent-1) After 42 seconds, recent_cpu is 86.25, load_avg is 0.43.
(mlfqs-recent-1) After 44 seconds, recent_cpu is 89.04, load_avg is 0.44.
(mlfqs-recent-1) After 46 seconds, recent_cpu is 91.73, load_avg is 0.45.
(mlfqs-recent-1) After 48 seconds, recent_cpu is 94.33, load_avg is 0.47.
(mlfqs-recent-1) After 50 seconds, recent_cpu is 96.87, load_avg is 0.48.
(mlfqs-recent-1) After 52 seconds, recent_cpu is 99.30, load_avg is 0.49.
(mlfqs-recent-1) After 54 seconds, recent_cpu is 101.67, load_avg is 0.50.
(mlfqs-recent-1) After 56 seconds, recent_cpu is 103.95, load_avg is 0.52.
(mlfqs-recent-1) After 58 seconds, recent_cpu is 106.17, load_avg is 0.53.
(mlfqs-recent-1) After 60 seconds, recent_cpu is 108.30, load_avg is 0.54.
(mlfqs-recent-1) After 62 seconds, recent_cpu is 110.37, load_avg is 0.55.
(mlfqs-recent-1) After 64 seconds, recent_cpu is 112.38, load_avg is 0.56.
(mlfqs-recent-1) After 66 seconds, recent_cpu is 114.32, load_avg is 0.57.
(mlfqs-recent-1) After 68 seconds, recent_cpu is 116.18, load_avg is 0.58.
(mlfqs-recent-1) After 70 seconds, recent_cpu is 118.00, load_avg is 0.59.
(mlfqs-recent-1) After 72 seconds, recent_cpu is 119.76, load_avg is 0.59.
(mlfqs-recent-1) After 74 seconds, recent_cpu is 121.46, load_avg is 0.60.
(mlfqs-recent-1) After 76 seconds, recent_cpu is 123.10, load_avg is 0.61.
(mlfqs-recent-1) After 78 seconds, recent_cpu is 124.69, load_avg is 0.62.
(mlfqs-recent-1) After 80 seconds, recent_cpu is 126.24, load_avg is 0.63.
(mlfqs-recent-1) After 82 seconds, recent_cpu is 127.73, load_avg is 0.63.
(mlfqs-recent-1) After 84 seconds, recent_cpu is 129.18, load_avg is 0.64.
(mlfqs-recent-1) After 86 seconds, recent_cpu is 130.58, load_avg is 0.65.
(mlfqs-recent-1) After 88 seconds, recent_cpu is 131.92, load_avg is 0.65.
(mlfqs-recent-1) After 90 seconds, recent_cpu is 133.23, load_avg is 0.66.
(mlfqs-recent-1) After 92 seconds, recent_cpu is 134.49, load_avg is 0.67.
(mlfqs-recent-1) After 94 seconds, recent_cpu is 135.71, load_avg is 0.67.
(mlfqs-recent-1) After 96 seconds, recent_cpu is 136.89, load_avg is 0.68.
(mlfqs-recent-1) After 98 seconds, recent_cpu is 138.02, load_avg is 0.68.
(mlfqs-recent-1) After 100 seconds, recent_cpu is 139.13, load_avg is 0.69.
(mlfqs-recent-1) After 102 seconds, recent_cpu is 140.19, load_avg is 0.69.
(mlfqs-recent-1) After 104 seconds, recent_cpu is 141.22, load_avg is 0.70.
(mlfqs-recent-1) After 106 seconds, recent_cpu is 142.21, load_avg is 0.70.
(mlfqs-recent-1) After 108 seconds, recent_cpu is 143.18, load_avg is 0.71.
(mlfqs-recent-1) After 110 seconds, recent_cpu is 144.10, load_avg is 0.71.
(mlfqs-recent-1) After 112 seconds, recent_cpu is 145.00, load_avg is 0.72.
(mlfqs-recent-1) After 114 seconds, recent_cpu is 145.88, load_avg is 0.72.
(mlfqs-recent-1) After 116 seconds, recent_cpu is 146.72, load_avg is 0.73.
(mlfqs-recent-1) After 118 seconds, recent_cpu is 147.53, load_avg is 0.73.
(mlfqs-recent-1) After 120 seconds, recent_cpu is 148.32, load_avg is 0.73.
(mlfqs-recent-1) After 122 seconds, recent_cpu is 149.09, load_avg is 0.74.
(mlfqs-recent-1) After 124 seconds, recent_cpu is 149.83, load_avg is 0.74.
(mlfqs-recent-1) After 126 seconds, recent_cpu is 150.53, load_avg is 0.75.
(mlfqs-recent-1) After 128 seconds, recent_cpu is 151.22, load_avg is 0.75.
(mlfqs-recent-1) After 130 seconds, recent_cpu is 151.89, load_avg is 0.75.
(mlfqs-recent-1) After 132 seconds, recent_cpu is 152.53, load_avg is 0.76.
(mlfqs-recent-1) After 134 seconds, recent_cpu is 153.16, load_avg is 0.76.
(mlfqs-recent-1) After 136 seconds, recent_cpu is 153.76, load_avg is 0.76.
(mlfqs-recent-1) After 138 seconds, recent_cpu is 154.35, load_avg is 0.76.
(mlfqs-recent-1) After 140 seconds, recent_cpu is 154.91, load_avg is 0.77.
(mlfqs-recent-1) After 142 seconds, recent_cpu is 155.46, load_avg is 0.77.
(mlfqs-recent-1) After 144 seconds, recent_cpu is 155.99, load_avg is 0.77.
(mlfqs-recent-1) After 146 seconds, recent_cpu is 156.51, load_avg is 0.77.
(mlfqs-recent-1) After 148 seconds, recent_cpu is 157.01, load_avg is 0.78.
(mlfqs-recent-1) After 150 seconds, recent_cpu is 157.47, load_avg is 0.78.
(mlfqs-recent-1) After 152 seconds, recent_cpu is 157.93, load_avg is 0.78.
(mlfqs-recent-1) After 154 seconds, recent_cpu is 158.38, load_avg is 0.78.
(mlfqs-recent-1) After 156 seconds, recent_cpu is 158.82, load_avg is 0.79.
(mlfqs-recent-1) After 158 seconds, recent_cpu is 159.25, load_avg is 0.79.
(mlfqs-recent-1) After 160 seconds, recent_cpu is 159.64, load_avg is 0.79.
(mlfqs-recent-1) After 162 seconds, recent_cpu is 160.02, load_avg is 0.79.
(mlfqs-recent-1) After 164 seconds, recent_cpu is 160.40, load_avg is 0.79.
(mlfqs-recent-1) After 166 seconds, recent_cpu is 160.77, load_avg is 0.80.
(mlfqs-recent-1) After 168 seconds, recent_cpu is 161.11, load_avg is 0.80.
(mlfqs-recent-1) After 170 seconds, recent_cpu is 161.45, load_avg is 0.80.
(mlfqs-recent-1) After 172 seconds, recent_cpu is 161.78, load_avg is 0.80.
(mlfqs-recent-1) After 174 seconds, recent_cpu is 162.10, load_avg is 0.80.
(mlfqs-recent-1) After 176 seconds, recent_cpu is 162.40, load_avg is 0.80.
(mlfqs-recent-1) After 178 seconds, recent_cpu is 162.70, load_avg is 0.80.
(mlfqs-recent-1) After 180 seconds, recent_cpu is 162.99, load_avg is 0.81.
(mlfqs-recent-1) end
Execution of 'mlfqs-recent-1' complete.
Timer: 19026 ticks
Thread: 936 idle ticks, 18094 kernel ticks, 0 user ticks
Console: 7240 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-recent-1.ck tests/threads/mlfqs-recent-1 tests/threads/mlfqs-recent-1.result
FAIL tests/threads/mlfqs-recent-1
Some recent_cpu values were missing or differed from those expected by more than 2.5.
  time   actual <-> expected explanation
------ -------- --- -------- ----------------------------------------
     2     6.50  =  6.40     
     4    11.83  =  12.60    
     6    16.99  =  18.61    
     8    21.98  =  24.44    
    10    26.82 <<< 30.08    Too small, by 0.76.
    12    31.50 <<< 35.54    Too small, by 1.54.
    14    36.04 <<< 40.83    Too small, by 2.29.
    16    40.43 <<< 45.96    Too small, by 3.03.
    18    44.67 <<< 50.92    Too small, by 3.75.
    20    48.78 <<< 55.73    Too small, by 4.45.
    22    52.77 <<< 60.39    Too small, by 5.12.
    24    56.63 <<< 64.90    Too small, by 5.77.
    26    60.36 <<< 69.27    Too small, by 6.41.
    28    63.98 <<< 73.50    Too small, by 7.02.
    30    67.48 <<< 77.60    Too small, by 7.62.
    32    70.88 <<< 81.56    Too small, by 8.18.
    34    74.16 <<< 85.40    Too small, by 8.74.
    36    77.33 <<< 89.12    Too small, by 9.29.
    38    80.40 <<< 92.72    Too small, by 9.82.
    40    83.37 <<< 96.20    Too small, by 10.33.
    42    86.25 <<< 99.57    Too small, by 10.82.
    44    89.04 <<< 102.84   Too small, by 11.30.
    46    91.73 <<< 106.00   Too small, by 11.77.
    48    94.33 <<< 109.06   Too small, by 12.23.
    50    96.87 <<< 112.02   Too small, by 12.65.
    52    99.30 <<< 114.89   Too small, by 13.09.
    54   101.67 <<< 117.66   Too small, by 13.49.
    56   103.95 <<< 120.34   Too small, by 13.89.
    58   106.17 <<< 122.94   Too small, by 14.27.
    60   108.30 <<< 125.46   Too small, by 14.66.
    62   110.37 <<< 127.89   Too small, by 15.02.
    64   112.38 <<< 130.25   Too small, by 15.37.
    66   114.32 <<< 132.53   Too small, by 15.71.
    68   116.18 <<< 134.73   Too small, by 16.05.
    70   118.00 <<< 136.86   Too small, by 16.36.
    72   119.76 <<< 138.93   Too small, by 16.67.
    74   121.46 <<< 140.93   Too small, by 16.97.
    76   123.10 <<< 142.86   Too small, by 17.26.
    78   124.69 <<< 144.73   Too small, by 17.54.
    80   126.24 <<< 146.54   Too small, by 17.80.
    82   127.73 <<< 148.29   Too small, by 18.06.
    84   129.18 <<< 149.99   Too small, by 18.31.
    86   130.58 <<< 151.63   Too small, by 18.55.
    88   131.92 <<< 153.21   Too small, by 18.79.
    90   133.23 <<< 154.75   Too small, by 19.02.
    92   134.49 <<< 156.23   Too small, by 19.24.
    94   135.71 <<< 157.67   Too small, by 19.46.
    96   136.89 <<< 159.06   Too small, by 19.67.
    98   138.02 <<< 160.40   Too small, by 19.88.
   100   139.13 <<< 161.70   Too small, by 20.07.
   102   140.19 <<< 162.96   Too small, by 20.27.
   104   141.22 <<< 164.18   Too small, by 20.46.
   106   142.21 <<< 165.35   Too small, by 20.64.
   108   143.18 <<< 166.49   Too small, by 20.81.
   110   144.10 <<< 167.59   Too small, by 20.99.
   112   145.00 <<< 168.66   Too small, by 21.16.
   114   145.88 <<< 169.69   Too small, by 21.31.
   116   146.72 <<< 170.69   Too small, by 21.47.
   118   147.53 <<< 171.65   Too small, by 21.62.
   120   148.32 <<< 172.58   Too small, by 21.76.
   122   149.09 <<< 173.49   Too small, by 21.90.
   124   149.83 <<< 174.36   Too small, by 22.03.
   126   150.53 <<< 175.20   Too small, by 22.17.
   128   151.22 <<< 176.02   Too small, by 22.30.
   130   151.89 <<< 176.81   Too small, by 22.42.
   132   152.53 <<< 177.57   Too small, by 22.54.
   134   153.16 <<< 178.31   Too small, by 22.65.
   136   153.76 <<< 179.02   Too small, by 22.76.
   138   154.35 <<< 179.72   Too small, by 22.87.
   140   154.91 <<< 180.38   Too small, by 22.97.
   142   155.46 <<< 181.03   Too small, by 23.07.
   144   155.99 <<< 181.65   Too small, by 23.16.
   146   156.51 <<< 182.26   Too small, by 23.25.
   148   157.01 <<< 182.84   Too small, by 23.33.
   150   157.47 <<< 183.41   Too small, by 23.44.
   152   157.93 <<< 183.96   Too small, by 23.53.
   154   158.38 <<< 184.49   Too small, by 23.61.
   156   158.82 <<< 185.00   Too small, by 23.68.
   158   159.25 <<< 185.49   Too small, by 23.74.
   160   159.64 <<< 185.97   Too small, by 23.83.
   162   160.02 <<< 186.43   Too small, by 23.91.
   164   160.40 <<< 186.88   Too small, by 23.98.
   166   160.77 <<< 187.31   Too small, by 24.04.
   168   161.11 <<< 187.73   Too small, by 24.12.
   170   161.45 <<< 188.14   Too small, by 24.19.
   172   161.78 <<< 188.53   Too small, by 24.25.
   174   162.10 <<< 188.91   Too small, by 24.31.
   176   162.40 <<< 189.27   Too small, by 24.37.
   178   162.70 <<< 189.63   Too small, by 24.43.
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-fair-2 < /dev/null 2> tests/threads/mlfqs-fair-2.errors |tee tests/threads/mlfqs-fair-2.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-fair-2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-fair-2':
(mlfqs-fair-2) begin
(mlfqs-fair-2) Starting 2 threads...
(mlfqs-fair-2) Starting threads took 20 ticks.
(mlfqs-fair-2) Sleeping 40 seconds to let threads run, please wait...
(mlfqs-fair-2) Thread 0 received 1477 ticks.
(mlfqs-fair-2) Thread 1 received 1524 ticks.
(mlfqs-fair-2) end
Execution of 'mlfqs-fair-2' complete.
Timer: 4118 ticks
Thread: 999 idle ticks, 3123 kernel ticks, 0 user ticks
Console: 630 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-fair-2.ck tests/threads/mlfqs-fair-2 tests/threads/mlfqs-fair-2.result
pass tests/threads/mlfqs-fair-2
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-fair-20 < /dev/null 2> tests/threads/mlfqs-fair-20.errors |tee tests/threads/mlfqs-fair-20.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-fair-20
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-fair-20':
(mlfqs-fair-20) begin
(mlfqs-fair-20) Starting 20 threads...
(mlfqs-fair-20) Starting threads took 150 ticks.
(mlfqs-fair-20) Sleeping 40 seconds to let threads run, please wait...
(mlfqs-fair-20) Thread 0 received 144 ticks.
(mlfqs-fair-20) Thread 1 received 133 ticks.
(mlfqs-fair-20) Thread 2 received 157 ticks.
(mlfqs-fair-20) Thread 3 received 154 ticks.
(mlfqs-fair-20) Thread 4 received 141 ticks.
(mlfqs-fair-20) Thread 5 received 142 ticks.
(mlfqs-fair-20) Thread 6 received 139 ticks.
(mlfqs-fair-20) Thread 7 received 141 ticks.
(mlfqs-fair-20) Thread 8 received 150 ticks.
(mlfqs-fair-20) Thread 9 received 149 ticks.
(mlfqs-fair-20) Thread 10 received 145 ticks.
(mlfqs-fair-20) Thread 11 received 145 ticks.
(mlfqs-fair-20) Thread 12 received 133 ticks.
(mlfqs-fair-20) Thread 13 received 158 ticks.
(mlfqs-fair-20) Thread 14 received 141 ticks.
(mlfqs-fair-20) Thread 15 received 141 ticks.
(mlfqs-fair-20) Thread 16 received 140 ticks.
(mlfqs-fair-20) Thread 17 received 143 ticks.
(mlfqs-fair-20) Thread 18 received 139 ticks.
(mlfqs-fair-20) Thread 19 received 220 ticks.
(mlfqs-fair-20) end
Execution of 'mlfqs-fair-20' complete.
Timer: 4413 ticks
Thread: 978 idle ticks, 3438 kernel ticks, 0 user ticks
Console: 1460 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-fair-20.ck tests/threads/mlfqs-fair-20 tests/threads/mlfqs-fair-20.result
FAIL tests/threads/mlfqs-fair-20
Some tick counts were missing or differed from those expected by more than 20.
thread   actual <-> expected explanation
------ -------- --- -------- ----------------------------------------
     0      144  =  152      
     1      133  =  152      
     2      157  =  152      
     3      154  =  152      
     4      141  =  152      
     5      142  =  152      
     6      139  =  152      
     7      141  =  152      
     8      150  =  152      
     9      149  =  152      
    10      145  =  148      
    11      145  =  148      
    12      133  =  148      
    13      158  =  148      
    14      141  =  148      
    15      141  =  148      
    16      140  =  148      
    17      143  =  148      
    18      139  =  148      
    19      220 >>> 148      Too big, by 52.
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-nice-2 < /dev/null 2> tests/threads/mlfqs-nice-2.errors |tee tests/threads/mlfqs-nice-2.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-nice-2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-nice-2':
(mlfqs-nice-2) begin
(mlfqs-nice-2) Starting 2 threads...
(mlfqs-nice-2) Starting threads took 19 ticks.
(mlfqs-nice-2) Sleeping 40 seconds to let threads run, please wait...
(mlfqs-nice-2) Thread 0 received 2296 ticks.
(mlfqs-nice-2) Thread 1 received 705 ticks.
(mlfqs-nice-2) end
Execution of 'mlfqs-nice-2' complete.
Timer: 4120 ticks
Thread: 999 idle ticks, 3124 kernel ticks, 0 user ticks
Console: 629 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-nice-2.ck tests/threads/mlfqs-nice-2 tests/threads/mlfqs-nice-2.result
FAIL tests/threads/mlfqs-nice-2
Some tick counts were missing or differed from those expected by more than 50.
thread   actual <-> expected explanation
------ -------- --- -------- ----------------------------------------
     0     2296 >>> 1904     Too big, by 342.
     1      705 <<< 1096     Too small, by 341.
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-nice-10 < /dev/null 2> tests/threads/mlfqs-nice-10.errors |tee tests/threads/mlfqs-nice-10.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-nice-10
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-nice-10':
(mlfqs-nice-10) begin
(mlfqs-nice-10) Starting 10 threads...
(mlfqs-nice-10) Starting threads took 75 ticks.
(mlfqs-nice-10) Sleeping 40 seconds to let threads run, please wait...
(mlfqs-nice-10) Thread 0 received 795 ticks.
(mlfqs-nice-10) Thread 1 received 680 ticks.
(mlfqs-nice-10) Thread 2 received 473 ticks.
(mlfqs-nice-10) Thread 3 received 428 ticks.
(mlfqs-nice-10) Thread 4 received 298 ticks.
(mlfqs-nice-10) Thread 5 received 199 ticks.
(mlfqs-nice-10) Thread 6 received 100 ticks.
(mlfqs-nice-10) Thread 7 received 0 ticks.
(mlfqs-nice-10) Thread 8 received 0 ticks.
(mlfqs-nice-10) Thread 9 received 0 ticks.
(mlfqs-nice-10) end
Execution of 'mlfqs-nice-10' complete.
Timer: 4244 ticks
Thread: 985 idle ticks, 3263 kernel ticks, 0 user ticks
Console: 993 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-nice-10.ck tests/threads/mlfqs-nice-10 tests/threads/mlfqs-nice-10.result
FAIL tests/threads/mlfqs-nice-10
Some tick counts were missing or differed from those expected by more than 25.
thread   actual <-> expected explanation
------ -------- --- -------- ----------------------------------------
     0      795 >>> 672      Too big, by 98.
     1      680 >>> 588      Too big, by 67.
     2      473  =  492      
     3      428  =  408      
     4      298  =  316      
     5      199 <<< 232      Too small, by 8.
     6      100 <<< 152      Too small, by 27.
     7        0 <<< 92       Too small, by 67.
     8        0 <<< 40       Too small, by 15.
     9        0  =  8        
pintos -v -k -T 480 --bochs  -- -q   -mlfqs run mlfqs-block < /dev/null 2> tests/threads/mlfqs-block.errors |tee tests/threads/mlfqs-block.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading..........
Kernel command line: -q -mlfqs run mlfqs-block
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-block':
(mlfqs-block) begin
(mlfqs-block) Main thread acquiring lock.
(mlfqs-block) Main thread creating block thread, sleeping 25 seconds...
(mlfqs-block) Block thread spinning for 20 seconds...
(mlfqs-block) Block thread acquiring lock...
(mlfqs-block) Main thread spinning for 5 seconds...
(mlfqs-block) Main thread releasing lock.
(mlfqs-block) Block thread should have already acquired lock.
(mlfqs-block) end
Execution of 'mlfqs-block' complete.
Timer: 3115 ticks
Thread: 482 idle ticks, 2638 kernel ticks, 0 user ticks
Console: 750 characters output
Keyboard: 0 keys pressed
Powering off...
========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Sep 23 2021 at 22:10:19
========================================================================
perl -I../.. ../../tests/threads/mlfqs-block.ck tests/threads/mlfqs-block tests/threads/mlfqs-block.result
FAIL tests/threads/mlfqs-block
Test output failed to match any acceptable form.

Acceptable output:
  (mlfqs-block) begin
  (mlfqs-block) Main thread acquiring lock.
  (mlfqs-block) Main thread creating block thread, sleeping 25 seconds...
  (mlfqs-block) Block thread spinning for 20 seconds...
  (mlfqs-block) Block thread acquiring lock...
  (mlfqs-block) Main thread spinning for 5 seconds...
  (mlfqs-block) Main thread releasing lock.
  (mlfqs-block) ...got it.
  (mlfqs-block) Block thread should have already acquired lock.
  (mlfqs-block) end
Differences in `diff -u' format:
  (mlfqs-block) begin
  (mlfqs-block) Main thread acquiring lock.
  (mlfqs-block) Main thread creating block thread, sleeping 25 seconds...
  (mlfqs-block) Block thread spinning for 20 seconds...
  (mlfqs-block) Block thread acquiring lock...
  (mlfqs-block) Main thread spinning for 5 seconds...
  (mlfqs-block) Main thread releasing lock.
- (mlfqs-block) ...got it.
  (mlfqs-block) Block thread should have already acquired lock.
  (mlfqs-block) end
pass tests/threads/alarm-single
pass tests/threads/alarm-multiple
pass tests/threads/alarm-simultaneous
pass tests/threads/alarm-priority
pass tests/threads/alarm-zero
pass tests/threads/alarm-negative
pass tests/threads/priority-change
pass tests/threads/priority-donate-one
pass tests/threads/priority-donate-multiple
pass tests/threads/priority-donate-multiple2
pass tests/threads/priority-donate-nest
pass tests/threads/priority-donate-sema
pass tests/threads/priority-donate-lower
pass tests/threads/priority-fifo
pass tests/threads/priority-preempt
pass tests/threads/priority-sema
pass tests/threads/priority-condvar
pass tests/threads/priority-donate-chain
FAIL tests/threads/mlfqs-load-1
FAIL tests/threads/mlfqs-load-60
FAIL tests/threads/mlfqs-load-avg
FAIL tests/threads/mlfqs-recent-1
pass tests/threads/mlfqs-fair-2
FAIL tests/threads/mlfqs-fair-20
FAIL tests/threads/mlfqs-nice-2
FAIL tests/threads/mlfqs-nice-10
FAIL tests/threads/mlfqs-block
8 of 27 tests failed.
make[1]: Leaving directory `/home/nimdrak/pintos/src/threads/build'
